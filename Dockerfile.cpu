# ========================================
# 多阶段构建 - AI处理模块Dockerfile (CPU版本)
# 阶段1: 代码混淆
# 阶段2: 运行环境
# ========================================

# ========================================
# 阶段1: 代码混淆(使用 PyArmor)
# ========================================
FROM python:3.12-slim AS obfuscator
LABEL stage="obfuscation"
WORKDIR /build

# 安装 PyArmor
RUN pip install --no-cache-dir pyarmor==8.5.9

# 复制源代码(只复制需要的文件)
COPY requirements.txt .
COPY *.py ./
COPY analyzer/ ./analyzer/
COPY preprocessor/ ./preprocessor/
COPY utils/ ./utils/
COPY botsort.yaml ./

# 使用 PyArmor 混淆代码(试用版基础混淆)
RUN pyarmor gen \
    --output /obfuscated \
    --recursive \
    --exclude requirements.txt \
    --exclude botsort.yaml \
    .

# ========================================
# 阶段2: 运行环境(生产镜像 - CPU版本)
# ========================================
FROM ubuntu:24.04

LABEL maintainer="侯阳洋"
LABEL description="VAR熔池视频分析系统 - AI处理模块(CPU版本，源码已混淆保护)"
LABEL security="code-obfuscated"
LABEL version="cpu"

WORKDIR /app/ai-processor

# 设置非交互式安装
ENV DEBIAN_FRONTEND=noninteractive

# 安装系统依赖和Python 3.12(Ubuntu 24.04原生支持)
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3.12 \
    python3.12-dev \
    python3-pip \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    libgl1 \
    curl \
    ffmpeg \
    fonts-noto-cjk \
    fonts-wqy-zenhei \
    fontconfig \
    && fc-cache -fv \
    && rm -rf /var/lib/apt/lists/*

# 设置环境变量(在安装依赖前设置)
ENV PIP_BREAK_SYSTEM_PACKAGES=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1

# 创建非root用户
RUN groupadd -r appgroup && useradd -r -g appgroup appuser

# 复制requirements.txt
COPY requirements.txt .

# 先安装CPU版本的PyTorch和torchvision
RUN pip3 install --no-cache-dir \
    torch torchvision --index-url https://download.pytorch.org/whl/cpu

# 再安装其他依赖
RUN pip3 install --no-cache-dir -r requirements.txt

# 从混淆阶段复制混淆后的代码
COPY --from=obfuscator /obfuscated/ .

# 复制配置文件(不需要混淆)
COPY botsort.yaml .

# 创建必要的目录并设置权限
RUN mkdir -p \
    ../storage/videos \
    ../storage/result_videos \
    ../storage/preprocessed_videos \
    ../storage/temp \
    ../storage/tracking_results \
    logs && \
    chown -R appuser:appgroup /app

# 切换到非root用户
USER appuser

# 暴露端口
EXPOSE 5000

# 健康检查
HEALTHCHECK --interval=30s --timeout=3s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:5000/health || exit 1

# 启动应用
CMD ["python3", "app.py"]